import React from 'react';
import { Card, List, Tag, Typography, Badge } from 'antd';
import { RocketOutlined, CheckCircleOutlined, SecurityScanOutlined, BugOutlined, CrownOutlined, NotificationOutlined } from '@ant-design/icons';

const { Text } = Typography;

const UpdatesList = () => {
  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  const updates = [
    {
      id: 1,
      title: "–ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–¥–ø–∏—Å–æ–∫",
      description: "–î–æ–±–∞–≤–ª–µ–Ω—ã –≥–∏–±–∫–∏–µ —Ç–∞—Ä–∏—Ñ—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏",
      type: "feature",
      date: "2024-01-15",
      important: true
    },
    {
      id: 2,
      title: "–£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫",
      description: "–ü–æ–∏—Å–∫ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ –∏ —Ç–æ—á–Ω–µ–µ",
      type: "improvement",
      date: "2024-01-10",
      important: false
    },
    {
      id: 3,
      title: "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
      description: "–£—Å—Ç—Ä–∞–Ω–µ–Ω–∞ —É—è–∑–≤–∏–º–æ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏",
      type: "security",
      date: "2024-01-08",
      important: true
    },
    {
      id: 4,
      title: "–ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è",
      description: "–£–ª—É—á—à–µ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∞–π—Ç–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö",
      type: "improvement",
      date: "2024-01-05",
      important: false
    },
    {
      id: 5,
      title: "–ù–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
      description: "–î–æ–±–∞–≤–ª–µ–Ω—ã 5 –Ω–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
      type: "feature",
      date: "2024-01-03",
      important: false
    },
    {
      id: 6,
      title: "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤",
      description: "–£—Å—Ç—Ä–∞–Ω–µ–Ω–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–æ–ª—å—à–∏—Ö PDF-—Ñ–∞–π–ª–æ–≤",
      type: "bugfix",
      date: "2023-12-28",
      important: false
    }
  ];

  const getUpdateTypeColor = (type) => {
    const colors = {
      feature: 'blue',
      bugfix: 'green',
      improvement: 'purple',
      security: 'red',
      announcement: 'orange',
    };
    return colors[type] || 'default';
  };

  const getTypeIcon = (type) => {
    const icons = {
      feature: <CrownOutlined />,
      bugfix: <BugOutlined />,
      improvement: <RocketOutlined />,
      security: <SecurityScanOutlined />,
      announcement: <NotificationOutlined />,
    };
    return icons[type] || <RocketOutlined />;
  };

  const getTypeLabel = (type) => {
    const labels = {
      feature: '–§—É–Ω–∫—Ü–∏—è',
      bugfix: '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
      improvement: '–£–ª—É—á—à–µ–Ω–∏–µ',
      security: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      announcement: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ',
    };
    return labels[type] || type;
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
  const sortedUpdates = [...updates].sort((a, b) => 
    new Date(b.date) - new Date(a.date)
  );

  return (
    <Card 
      title={
        <span className="flex items-center">
          <RocketOutlined className="mr-2" />
          –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          <Badge 
            count={sortedUpdates.length} 
            className="ml-2" 
          />
        </span>
      }
      className="mt-6 shadow-lg border-0 rounded-xl"
    >
      <List
        dataSource={sortedUpdates}
        renderItem={(update) => (
          <List.Item
            className="py-4 border-b border-gray-100 last:border-b-0"
          >
            <List.Item.Meta
              avatar={
                <div className="w-10 h-10 rounded-full bg-blue-50 flex items-center justify-center">
                  {getTypeIcon(update.type)}
                </div>
              }
              title={
                <div className="flex flex-col sm:flex-row sm:items-center gap-2">
                  <Text strong className="text-base">
                    {update.title}
                  </Text>
                  <Tag 
                    color={getUpdateTypeColor(update.type)} 
                    className="m-0 flex items-center gap-1"
                  >
                    {getTypeLabel(update.type)}
                  </Tag>
                </div>
              }
              description={
                <div className="space-y-2">
                  <Text className="text-xs text-gray-500">
                    {formatDate(update.date)}
                  </Text>
                  <div className="text-sm text-gray-700">
                    {update.description}
                  </div>
                  {update.important && (
                    <Tag 
                      color="red" 
                      icon={<CheckCircleOutlined />}
                      className="mt-2"
                    >
                      –í–∞–∂–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                    </Tag>
                  )}
                </div>
              }
            />
          </List.Item>
        )}
      />
      
      <div className="mt-4 p-4 bg-gray-50 rounded-lg">
        <Text className="text-sm text-gray-600">
          üí° –•–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º!
        </Text>
      </div>
    </Card>
  );
};

export default UpdatesList;